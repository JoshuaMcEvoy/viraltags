<body onload="initialize()">
  <div class="container">
    <div id="earth_div">
      <form action="/pages/globe" class="searchBar" >
        <input type="text" name="address" placeholder="Search for a location" class="searchInput">
        <button class="searchButton">Search</button>
      </form>
      <div class="zoombuttons">
        <div id="slidecontainer">
          <input type="button" value="-" onclick="setViewminus();"><input type="range" min="1" max="16" value="2" class="slider" step="2" id="myRange" onchange="showValue(this.value), setView(this.value)"/><input type="button" value="+" onclick="setViewplus();">
          <br>
          <span id="range">2</span>
        </div>
        <div id="tweetbox">
            <div class="tweetBoxHead">
              <h3>Who's tweeting</h3>
            </div>
            <div class="tweetsList">
              <ul>
                <% @searches.each do |tweet| %>
                  <li class='tweet<%=tweet.id%>'>
                    <span id="username"><%= tweet.screen_name %></span>
                    <span><%= tweet.text %></span>
                  </li>
                  <hr noshade/>
                <% end %>
              </ul>
            </div>
        </div>
      </div>
    </div>
  </div>
</body>
<script src="//www.webglearth.com/v2/api.js"></script>
<script>
let lat
let lng
<% @searches.each do |tweet| %>
lat = <%= tweet.latitude %>
lng = <%= tweet.longitude %>
<% end %>
  let earth;
  function initialize() {
    let options = {
          sky: true,
          dragging: true,
          tilting: true,
          zoom: 2
        };
    earth = new WE.map('earth_div', options);
    WE.tileLayer('//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
          attribution: 'OpenStreetMap'
        }).addTo(earth);
    earth.setView([lat, lng], 2);
    let tweets = <%== @tweet_locations.to_json %>;
    tweets.forEach(function(tweet) {
      let [message, lat, lng, id] = tweet
      let marker = WE.marker([lat, lng], '/assets/twitter.png', 30, 30).addTo(earth);
      marker.bindPopup(message);
      marker.on('mouseover', function(e) {
        marker.openPopup();
        $('.tweet'+ id).css({
           'background' : 'hsla(194, 100%, 50%, 0.66)',
           'font-weight' : 'bold'
        });
      });
      marker.on('mouseout', function(e) {
        marker.closePopup();
        $('.tweet'+ id).css({
           'background' : 'none',
           'font-weight' : 'normal'
        });
      });
    })
  }

  const setView = function(zoom) {
    earth.setView([lat, lng], zoom);
  }
  const setViewminus = function() {
    let current = $('#myRange').val();
    current = parseInt(current)
    if(current > 1) {
      current = current - 2
    earth.setView([lat, lng], current);
    $('#myRange').val(current);
    document.getElementById("range").innerHTML=current;
  }
  }
  const setViewplus = function() {
    let current = $('#myRange').val();
    current = parseInt(current)
    if(current < 14) {
      current = current + 2
    earth.setView([lat, lng], current);
    $('#myRange').val(current);
    document.getElementById("range").innerHTML=current;
  }
  }
  function showValue(newValue){
    document.getElementById("range").innerHTML=newValue;
}
</script>
